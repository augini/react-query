{"version":3,"sources":["components/Navbar.js","components/Planet.js","components/Planets.js","components/Person.js","components/People.js","App.js","index.js"],"names":["Navbar","setPage","onClick","Planet","planet","className","name","population","terrain","fetchPlanets","a","fetch","res","json","Planets","useQuery","status","data","console","log","results","map","key","Person","person","gender","birth_year","fetchPeople","People","App","useState","page","initialIsOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAWeA,MATf,YAA8B,IAAZC,EAAW,EAAXA,QAChB,OACE,6BACE,4BAAQC,QAAS,kBAAMD,EAAQ,YAA/B,UACA,4BAAQC,QAAS,kBAAMD,EAAQ,aAA/B,a,8BCMSE,MAVf,YAA6B,IAAXC,EAAU,EAAVA,OAChB,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAOE,MACZ,0CAAgBF,EAAOG,YACvB,uCAAaH,EAAOI,WCHpBC,EAAY,uCAAG,4BAAAC,EAAA,sEACDC,MAAM,kCADL,cACbC,EADa,yBAEZA,EAAIC,QAFQ,2CAAH,qDAqCHC,MAhCf,WAAoB,IAAD,EACQC,YAAS,UAAWN,GAArCO,EADS,EACTA,OAAQC,EADC,EACDA,KAIhB,OAFID,GAAQE,QAAQC,IAAI,CAAEF,SAGxB,6BACE,wCAEY,YAAXD,GACC,6BACE,4CAIQ,UAAXA,GACC,6BACE,mDAIQ,YAAXA,GACC,6BACGC,EAAKG,QAAQC,KAAI,SAACjB,GAAD,OAChB,kBAAC,EAAD,CAAQA,OAAQA,EAAQkB,IAAKlB,EAAOE,aCrBjCiB,MAVf,YAA6B,IAAXC,EAAU,EAAVA,OAChB,OACE,yBAAKnB,UAAU,QACb,4BAAKmB,EAAOlB,MACZ,0CAAgBkB,EAAOC,QACvB,uCAAaD,EAAOE,cCHpBC,EAAW,uCAAG,4BAAAjB,EAAA,sEACAC,MAAM,iCADN,cACZC,EADY,yBAEXA,EAAIC,QAFO,2CAAH,qDAqCFe,MAhCf,WAAmB,IAAD,EACSb,YAAS,SAAUY,GAApCX,EADQ,EACRA,OAAQC,EADA,EACAA,KAIhB,OAFID,GAAQE,QAAQC,IAAI,CAAEF,SAGxB,6BACE,sCAEY,YAAXD,GACC,6BACE,4CAIQ,UAAXA,GACC,6BACE,mDAIQ,YAAXA,GACC,6BACGC,EAAKG,QAAQC,KAAI,SAACG,GAAD,OAChB,kBAAC,EAAD,CAAQA,OAAQA,EAAQF,IAAKE,EAAOlB,a,OCVjCuB,MAjBf,WAAgB,IAAD,EACWC,mBAAS,WADpB,mBACNC,EADM,KACA9B,EADA,KAGb,OACE,6BACE,yBAAKI,UAAU,OACb,8CACA,kBAAC,EAAD,CAAQJ,QAASA,IACjB,yBAAKI,UAAU,WACH,YAAT0B,EAAqB,kBAAC,EAAD,MAAc,kBAAC,EAAD,QAGxC,kBAAC,qBAAD,CAAoBC,eAAe,MCbzCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.be049c5e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Navbar({ setPage }) {\n  return (\n    <nav>\n      <button onClick={() => setPage('People')}>People</button>\n      <button onClick={() => setPage('Planets')}>Planets</button>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Planet({ planet }) {\n  return (\n    <div className=\"card\">\n      <h3>{planet.name}</h3>\n      <p>Population: {planet.population}</p>\n      <p>Terrain: {planet.terrain}</p>\n    </div>\n  );\n}\n\nexport default Planet;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport Planet from './Planet';\n\nconst fetchPlanets = async () => {\n  const res = await fetch('https://swapi.dev/api/planets/');\n  return res.json();\n};\n\nfunction Planets() {\n  const { status, data } = useQuery('planets', fetchPlanets);\n\n  if (status) console.log({ data });\n\n  return (\n    <div>\n      <h2>Planets </h2>\n\n      {status === 'loading' && (\n        <div>\n          <p>Loading data</p>\n        </div>\n      )}\n\n      {status === 'error' && (\n        <div>\n          <p>Error fetching data</p>\n        </div>\n      )}\n\n      {status === 'success' && (\n        <div>\n          {data.results.map((planet) => (\n            <Planet planet={planet} key={planet.name} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Planets;\n","import React from 'react';\n\nfunction Person({ person }) {\n  return (\n    <div className=\"card\">\n      <h3>{person.name}</h3>\n      <p>Population: {person.gender}</p>\n      <p>Terrain: {person.birth_year}</p>\n    </div>\n  );\n}\n\nexport default Person;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport Person from './Person';\n\nconst fetchPeople = async () => {\n  const res = await fetch('https://swapi.dev/api/people/');\n  return res.json();\n};\n\nfunction People() {\n  const { status, data } = useQuery('People', fetchPeople);\n\n  if (status) console.log({ data });\n\n  return (\n    <div>\n      <h2>People</h2>\n\n      {status === 'loading' && (\n        <div>\n          <p>Loading data</p>\n        </div>\n      )}\n\n      {status === 'error' && (\n        <div>\n          <p>Error fetching data</p>\n        </div>\n      )}\n\n      {status === 'success' && (\n        <div>\n          {data.results.map((person) => (\n            <Person person={person} key={person.name} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default People;\n","import React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport Planets from './components/Planets';\nimport People from './components/People';\nimport { ReactQueryDevtools } from 'react-query-devtools';\n\nfunction App() {\n  const [page, setPage] = useState('Planets');\n\n  return (\n    <div>\n      <div className=\"App\">\n        <h1>Star Wars Info</h1>\n        <Navbar setPage={setPage} />\n        <div className=\"content\">\n          {page === 'Planets' ? <Planets /> : <People />}\n        </div>\n      </div>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}